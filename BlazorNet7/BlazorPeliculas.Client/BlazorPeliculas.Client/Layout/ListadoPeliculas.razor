@inject IJSRuntime js


	<div class="mb-0 border border-1">
		<div class="ms-2">
			@* <input type="checkbox" @onchange="()=> MostrarBotones = !MostrarBotones" /> *@
			@* podemos reemplazarlo de esta manera *@
			<input type="checkbox" @bind="MostrarBotones" />
			<span>Mostrar botones</span>
		</div>
	</div>

	<div class="row mt-2">

		<ListadoGenerico Listado="Peliculas">
			<hayRegistros Context="pelicula">

				<PeliculaIndividual Pelicula="pelicula"
								MostrarBotones="MostrarBotones" 
					EliminarPelicula="EliminarPelicula" />

			</hayRegistros>
		</ListadoGenerico>

	</div>






@code {
	[Parameter]
	[EditorRequired]
	public List<Pelicula>? Peliculas { get; set; }

	bool MostrarBotones = true;

	protected override void OnInitialized()
	{
		Console.WriteLine($"OnInitialized - cantidad Peliculas  {Peliculas!.Count}");
	}

	protected override void OnParametersSet()
	{
		Console.WriteLine($"OnParametersSet - cantidad Peliculas  {Peliculas!.Count}");

	}

	protected override void OnAfterRender(bool primeraRenderizacion)
	{
		Console.WriteLine("OnAfterRender: primera vez: " + primeraRenderizacion);
	}

	protected override bool ShouldRender()
	{
		Console.WriteLine("ShouldRender");
		return true;
	}



	public async Task EliminarPelicula(Pelicula pelicula)
	{
		var confirmado = await js.Confirm($"¿Desea borrar la película {pelicula.Titulo} ?");
		if (confirmado)
		{
			Console.WriteLine("Eliminar pelicula");
			Peliculas!.Remove(pelicula);
		}
		
	}
}
